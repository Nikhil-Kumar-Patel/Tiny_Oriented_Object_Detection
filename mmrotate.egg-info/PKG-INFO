Metadata-Version: 2.1
Name: mmrotate
Version: 0.3.2
Summary: Rotation Detection Toolbox and Benchmark
Home-page: https://github.com/open-mmlab/mmrotate
Author: MMRotate Authors
Author-email: openmmlab@gmail.com
License: Apache License 2.0
Keywords: computer vision,object detection,rotation detection
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: e2cnn
Requires-Dist: matplotlib
Requires-Dist: mmcv-full
Requires-Dist: mmdet
Requires-Dist: numpy
Requires-Dist: pycocotools
Requires-Dist: six
Requires-Dist: terminaltables
Requires-Dist: torch
Provides-Extra: all
Requires-Dist: cython; extra == "all"
Requires-Dist: numpy; extra == "all"
Requires-Dist: imagecorruptions; extra == "all"
Requires-Dist: scipy; extra == "all"
Requires-Dist: sklearn; extra == "all"
Requires-Dist: e2cnn; extra == "all"
Requires-Dist: matplotlib; extra == "all"
Requires-Dist: mmcv-full; extra == "all"
Requires-Dist: mmdet; extra == "all"
Requires-Dist: numpy; extra == "all"
Requires-Dist: pycocotools; extra == "all"
Requires-Dist: six; extra == "all"
Requires-Dist: terminaltables; extra == "all"
Requires-Dist: torch; extra == "all"
Requires-Dist: asynctest; extra == "all"
Requires-Dist: codecov; extra == "all"
Requires-Dist: coverage; extra == "all"
Requires-Dist: cython; extra == "all"
Requires-Dist: e2cnn; extra == "all"
Requires-Dist: flake8; extra == "all"
Requires-Dist: interrogate; extra == "all"
Requires-Dist: isort==4.3.21; extra == "all"
Requires-Dist: kwarray; extra == "all"
Requires-Dist: matplotlib; extra == "all"
Requires-Dist: pytest; extra == "all"
Requires-Dist: sklearn; extra == "all"
Requires-Dist: ubelt; extra == "all"
Requires-Dist: wheel; extra == "all"
Requires-Dist: xdoctest>=0.10.0; extra == "all"
Requires-Dist: yapf; extra == "all"
Provides-Extra: tests
Requires-Dist: asynctest; extra == "tests"
Requires-Dist: codecov; extra == "tests"
Requires-Dist: coverage; extra == "tests"
Requires-Dist: cython; extra == "tests"
Requires-Dist: e2cnn; extra == "tests"
Requires-Dist: flake8; extra == "tests"
Requires-Dist: interrogate; extra == "tests"
Requires-Dist: isort==4.3.21; extra == "tests"
Requires-Dist: kwarray; extra == "tests"
Requires-Dist: matplotlib; extra == "tests"
Requires-Dist: pytest; extra == "tests"
Requires-Dist: sklearn; extra == "tests"
Requires-Dist: ubelt; extra == "tests"
Requires-Dist: wheel; extra == "tests"
Requires-Dist: xdoctest>=0.10.0; extra == "tests"
Requires-Dist: yapf; extra == "tests"
Provides-Extra: build
Requires-Dist: cython; extra == "build"
Requires-Dist: numpy; extra == "build"
Provides-Extra: optional
Requires-Dist: imagecorruptions; extra == "optional"
Requires-Dist: scipy; extra == "optional"
Requires-Dist: sklearn; extra == "optional"
Provides-Extra: mim
Requires-Dist: mmcv-full>=1.5.0; extra == "mim"

# mmrotate-dcfl
Official implementation for the CVPR23 paper: Dynamic Coarse-to-Fine Learning for Oriented Tiny Object Detection. [arxiv](https://arxiv.org/abs/2304.08876)

## Introduction
DCFL is a learning framework for detecting oriented tiny objects.

![demo image](figures/framework_final.png)

## Installation and Get Started

Required environments:
- Linux
- Python 3.7+
- PyTorch 1.10.0+
- CUDA 9.2+
- GCC 5+
- MMdet 2.23.0+
- [MMCV-DCFL](https://github.com/Chasel-Tsui/MMCV-DCFL) 


Install:
Note that this repository is based on the MMRotate. Assume that your environment has satisfied the above requirements, please follow the following steps for installation.

```
git clone https://github.com/Chasel-Tsui/mmrotate-dcfl.git
cd mmrotate-dcfl
pip install -r requirements/build.txt
python setup.py develop
```

## Main Results


DOTA-v2.0

| Method |         Backbone         | AP50  |  Angle | lr schd | Aug  | Batch Size |                           Configs                          | Speed |
| :-----: | :----------------------: | :---: | :-----: | :--: | :-------: |:-----:| :----------------------------------------------------------: | :--: |
|RetinaNet-O| ResNet50 (1024,1024,200) | 46.68 |  le135  |   1x    |  Flipping   |     2      | [retinanet_obb_r50_dota2](configs/baselines/retinanet_le135_r50_dota2.py) | 20.8 FPS|
|R3Det w/ KLD| ResNet50 (1024,1024,200) | 47.26 |  le135  |   1x    |  Flipping   |     2      | [r3det_le135_r50_dota2](configs/baselines/r3det_le135_r50_dota2.py) | 16.2 FPS |
|ATSS-O| ResNet50 (1024,1024,200) | 49.57 |  le135  |   1x    |  Flipping   |     2      | [atss_le135_r50_dota2](configs/baselines/atss_le135_r50_dota2.py) | - |
|S2A-Net| ResNet50 (1024,1024,200) | 49.86 |  le135  |   1x    |  Flipping   |     2      | [s2a_le135_r50_dota2](configs/baselines/s2a_le135_r50_dota2.py) | 18.9 FPS|
|DCFL| ResNet50 (1024,1024,200) | 51.57 | le135  |   1x    |  Flipping   |     2      |     [dcfl_r50_dota2](configs/dcfl/dotav2_test_dcfl_r50_1x.py)      | 20.9 FPS |
|DCFL| ResNet101 (1024,1024,200) | **52.54** | le135  |   1x    |  Flipping   |     2      |     [dcfl_r101_dota2](configs/dcfl/dotav2_test_dcfl_r101_1x.py)      | - |

## Visualization
Predictions of the RetinaNet-O are shown in the first row, predictions of the DCFL are shown in the second row. Note that the green box denotes the True Positive, the red box denotes the False Negative and the blue box denotes the False Positive predictions.
![demo_images](figures/vis.png)

## Citation
If you find this work helpful, please consider citing:
```bibtex
@InProceedings{Xu_2023_CVPR,
    author    = {Xu, Chang and Ding, Jian and Wang, Jinwang and Yang, Wen and Yu, Huai and Yu, Lei and Xia, Gui-Song},
    title     = {Dynamic Coarse-To-Fine Learning for Oriented Tiny Object Detection},
    booktitle = {Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)},
    month     = {June},
    year      = {2023},
    pages     = {7318-7328}
}
```
